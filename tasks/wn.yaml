---
  - service: name=firewalld state=stopped
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7
    ignore_errors: yes

  - name: Wait for master
    wait_for:
      path: "{{ SLURM_CONF_DIR }}/slurm.conf"
    delegate_to: "{{slurm_server_name}}"
    when: TEST is not defined

  - name: Copy slurm.conf to the master
    fetch: src="{{ SLURM_CONF_DIR }}/slurm.conf" dest="/tmp/slurm.conf" flat=yes

  - name: copy slurm.conf file from the frontend
    copy: src=/tmp/slurm.conf  dest={{ SLURM_CONF_DIR }}/slurm.conf  force=yes

  - name: Copy cgroup.conf to the master
    fetch: src="{{ SLURM_CONF_DIR }}/cgroup.conf" dest="/tmp/cgroup.conf" flat=yes
    when: "slurm_version is version('22.0.0', '>=')"

  - name: copy cgroup.conf file from the frontend
    copy: src=/tmp/cgroup.conf  dest={{ SLURM_CONF_DIR }}/cgroup.conf  force=yes
    when: "slurm_version is version('22.0.0', '>=')"

  - name: Copy gres.conf to the master
    fetch: src="{{ SLURM_CONF_DIR }}/gres.conf" dest="/tmp/gres.conf" flat=yes
    when: slurm_wn_gres != ""

  - name: copy gres.conf file from the frontend
    copy: src=/tmp/gres.conf  dest={{ SLURM_CONF_DIR }}/gres.conf  force=yes
    when: slurm_wn_gres != ""

  - name: Wait 5 secs to enable slurm to start
    pause:
      seconds: 5

    # start SLURM daemon
  - name: Create slurmd systemd unit file
    template:
      src: "slurmd.service.j2"
      dest: "/etc/systemd/system/slurmd.service"

  - name: SystemD daemon-reload and enable/start slurmd service
    systemd:
      state: started
      enabled: yes
      name: slurmd.service
      daemon_reload: yes

  - name: Reconfigure SLURM
    command: scontrol reconfigure
    become: true
    become_user: "{{slurm_user}}"

  - stat:
      path: /var/log/slurm/slurmd.log
    register: log

  - name: allow the slurm user to acces the slurm logs
    file: path=/var/log/slurm/slurmd.log mode=0644
    when: log.stat.exists
